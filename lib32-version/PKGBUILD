# Maintainer: Reza Jahanbakhshi <reza.jahanbakhshi at gmail dot com
# Contributor: Lone_Wolf <lone_wolf@klaas-de-kat.nl>
# Contributor: Armin K. <krejzi at email dot com>
# Contributor: Kristian Klausen <klausenbusk@hotmail.com>
# Contributor: Egon Ashrafinia <e.ashrafinia@gmail.com>
# Contributor: Tavian Barnes <tavianator@gmail.com>
# Contributor: Jan de Groot <jgc@archlinux.org>
# Contributor: Andreas Radke <andyrtr@archlinux.org>
# Contributor: Thomas Dziedzic < gostrc at gmail >
# Contributor: Antti "Tera" Oja <antti.bofh@gmail.com>
# Contributor: Diego Jose <diegoxter1006@gmail.com>
# mesa-amdonly changes: Hanz Badua <hanzbadua at icloud dot com>

pkgname=lib32-mesa-amdonly
pkgdesc="an open-source implementation of the OpenGL specification (mesa-amdonly, 32 bit)"
pkgver=0
pkgrel=1
arch=('x86_64')
makedepends=(
    'cbindgen'
    'clang'
    'cmake'
    'elfutils'
    'glslang' 
    'lib32-clang'
    'lib32-expat'
    'lib32-gcc-libs'
    'lib32-glibc'
    'lib32-libdrm'
    'lib32-libelf'
    'lib32-libglvnd'
    'lib32-libva'
    'lib32-libvdpau' 
    'lib32-libx11'
    'lib32-libxcb'
    'lib32-libxext'
    'lib32-libxfixes'
    'lib32-libxml2'
    'lib32-libxrandr'
    'lib32-libxshmfence'
    'lib32-libxxf86vm'
    'lib32-llvm'
    'lib32-llvm-libs'
    'lib32-lm_sensors'
    'lib32-rust-libs'
    'lib32-spirv-llvm-translator'
    'lib32-spirv-tools'
    'lib32-systemd'
    'lib32-vulkan-icd-loader'
    'lib32-wayland'
    'lib32-xcb-util-keysyms'
    'lib32-zlib'
    'lib32-zstd'
    'libclc'
    'meson' 
    'python-mako'
    'python-packaging'
    'python-ply' 
    'rust-bindgen' 
    'wayland-protocols' 
    'xorgproto'
)
depends=(
    'lib32-expat'
    'lib32-gcc-libs'
    'lib32-glibc'
    'lib32-libdrm'
    'lib32-libelf'
    'lib32-libglvnd'
    'lib32-libx11'
    'lib32-libxcb'
    'lib32-libxext'
    'lib32-libxfixes'
    'lib32-libxshmfence'
    'lib32-libxxf86vm'
    'lib32-llvm-libs'
    'lib32-lm_sensors'
    'lib32-wayland'
    'lib32-zlib'
    'lib32-zstd'
    'mesa-amdonly'
)
optdepends=('opengl-man-pages: for the OpenGL API man pages')
provides=(
    'lib32-vulkan-driver'
    'lib32-vulkan-mesa-layers'
    'lib32-vulkan-radeon'
    'lib32-opengl-driver'
    'lib32-libva-mesa-driver'
    'lib32-mesa-vdpau'
    'lib32-mesa-libgl'
    'lib32-mesa'
)
conflicts=(
    'lib32-vulkan-mesa-layers'
    'lib32-vulkan-radeon'
    'lib32-libva-mesa-driver'
    'lib32-mesa-vdpau'
    'lib32-mesa-libgl'
    'lib32-mesa'
)
url="https://www.mesa3d.org"
license=('custom')
source=('mesa::git+https://gitlab.freedesktop.org/mesa/mesa.git#branch=24.1' 'LICENSE' 'llvm32.native')
sha256sums=('SKIP' 'SKIP' 'SKIP')
options=(!lto !debug)

pkgver() {
    cd mesa
    local _ver
    _ver=$(<VERSION)

    local _patchver
    local _patchfile
    for _patchfile in "${source[@]}"; do
        _patchfile="${_patchfile%%::*}"
        _patchfile="${_patchfile##*/}"
        [[ $_patchfile = *.patch ]] || continue
        _patchver="${_patchver}$(md5sum ${srcdir}/${_patchfile} | cut -c1-32)"
    done
    _patchver="$(echo -n $_patchver | md5sum | cut -c1-7)"

    echo ${_ver/-/_}.$(git rev-list --count HEAD).$(git rev-parse --short HEAD).${_patchver}
}

prepare() {
    # although removing _build folder in build() function feels more natural,
    # that interferes with the spirit of makepkg --noextract
    if [  -d _build ]; then
        rm -rf _build
    fi

    local _patchfile
    for _patchfile in "${source[@]}"; do
        _patchfile="${_patchfile%%::*}"
        _patchfile="${_patchfile##*/}"
        [[ $_patchfile = *.patch ]] || continue
        echo "Applying patch $_patchfile..."
        patch --directory=mesa --forward --strip=1 --input="${srcdir}/${_patchfile}"
    done
}

build() {
    export CC="${CC:-gcc}"
    export CXX="${CXX:-g++}"
    CC="$CC -m32"
    CXX="$CXX -m32"
    export PKG_CONFIG=/usr/bin/i686-pc-linux-gnu-pkg-config

    meson setup mesa _build \
        --native-file llvm32.native \
        --libdir=/usr/lib32 \
        -D c_args="-O3 -g0 -march=native" \
        -D c_link_args="-O3 -g0 -march=native" \
        -D cpp_args="-O3 -g0 -march=native" \
        -D cpp_link_args="-O3 -g0 -march=native" \
        -D rust_args="" \
        -D rust_link_args="" \
        -D b_asneeded=false \
        -D b_ndebug=true \
        -D b_pch=false \
        -D b_lto=false \
        -D android-strict=false \
        -D android-libbacktrace=disabled \
        -D buildtype=release \
        -D platforms=x11,wayland \
        -D gallium-drivers=radeonsi,swrast,zink \
        -D dri3=enabled \
        -D egl=enabled \
        -D gallium-extra-hud=true \
        -D gallium-nine=true \
        -D gallium-omx=disabled \
        -D gallium-opencl=disabled \
        -D gallium-va=enabled \
        -D gallium-vdpau=enabled \
        -D gallium-xa=disabled \
        -D gbm=enabled \
        -D gles1=disabled \
        -D gles2=enabled \
        -D glvnd=enabled \
        -D glx=dri \
        -D intel-clc=auto \
        -D intel-rt=disabled \
        -D libunwind=enabled \
        -D llvm=enabled \
        -D lmsensors=enabled \
        -D osmesa=true \
        -D shader-cache=enabled \
        -D shared-glapi=enabled \
        -D valgrind=disabled \
        -D video-codecs=all \
        -D vulkan-beta=true \
        -D vulkan-drivers=amd,swrast \
        -D vulkan-layers=device-select,overlay \
        -D tools=[] \
        -D zstd=enabled \
        -D microsoft-clc=disabled \
        --wrap-mode=nofallback \
        --force-fallback-for=syn,paste \
        -D prefix=/usr \
        -D sysconfdir=/etc \

    meson configure --no-pager _build
    
    ninja $NINJAFLAGS -C _build
}

package() {
    DESTDIR="$pkgdir" ninja $NINJAFLAGS -C _build install

    # remove files provided by mesa-git
    rm -rf "$pkgdir"/etc
    rm -rf "$pkgdir"/usr/include
    rm -rf "$pkgdir"/usr/share/glvnd/
    rm -rf "$pkgdir"/usr/share/drirc.d/
    rm -rf "$pkgdir"/usr/share/vulkan/explicit_layer.d/
    rm -rf "$pkgdir"/usr/share/vulkan/implicit_layer.d/VkLayer_MESA_device_select.json

    # remove script file from /usr/bin
    # https://gitlab.freedesktop.org/mesa/mesa/issues/2230
    rm "${pkgdir}/usr/bin/mesa-overlay-control.py"
    rmdir "${pkgdir}/usr/bin"

    # indirect rendering
    ln -s /usr/lib32/libGLX_mesa.so.0 "${pkgdir}/usr/lib32/libGLX_indirect.so.0"
    install -m644 -Dt  "$pkgdir"/usr/share/licenses/$pkgbase/ "$srcdir"/LICENSE 
}
